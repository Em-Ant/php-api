name: Deploy

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
      - uses: actions/checkout@v3

      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - uses: php-actions/composer@v6
        with:
          dev: yes

      - name: create docs
        run: |
          composer docs

      - name: Generate info.json with full metadata
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          COMMIT_TIME=$(git show -s --format=%aI HEAD)
          BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          GIT_BRANCH="$GITHUB_REF_NAME"
          RUN_URL="https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${GITHUB_RUN_ATTEMPT}"
          PHP_VERSION=$(php -r "echo PHP_VERSION;")
          COMPOSER_VERSION=$(composer --version --no-ansi | head -n1)

          mkdir -p public

          cat <<EOF > public/info.json
          {
            "head_commit_hash": "$COMMIT_HASH",
            "head_commit_time": "$COMMIT_TIME",
            "build_time": "$BUILD_TIME",
            "git_branch": "$GIT_BRANCH",
            "github_run_url": "$RUN_URL",
            "php_version": "$PHP_VERSION",
            "composer_version": "$COMPOSER_VERSION"
          }
          EOF

          echo "âœ… Generated public/info.json:"
          cat public/info.json

      - name: Create dist folder
        env:
          VENDOR_CHANGED: ${{ steps.composer-cache.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p ./dist && cp -r src public docs dist

          # Only copy vendor if it changed
          if [ "$VENDOR_CHANGED" = "true" ]; then
            echo "Vendor unchanged, skipping..."
          else
            echo "Vendor changed, copying..."
            cp -r vendor dist/
          fi

          ls -la dist

      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp

      - name: Deploy via lftp
        env:
          FTP_HOST: ${{ secrets.FTP_HOST }}
          FTP_USERNAME: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PWD }}
          LOCAL_DIR: ./dist
          FTP_DESTINATION: /api/v1
        run: |
          echo "Deploying from $LOCAL_DIR to ftp://$FTP_HOST$FTP_DESTINATION"
          lftp $FTP_HOST -u $FTP_USERNAME,$FTP_PASSWORD -e "\
            set ftp:ssl-force false; \
            set ssl:verify-certificate false; \
            mirror --reverse --continue --dereference --verbose $LOCAL_DIR $FTP_DESTINATION; \
            quit"
